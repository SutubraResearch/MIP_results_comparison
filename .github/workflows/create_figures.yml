name: Run Jupyter Notebook

on:
  push:
    branches:
      - main  # Change this to your default branch if needed
permissions:
  contents: write
jobs:
  run_notebook:
    runs-on: ubuntu-latest  # You can choose a different runner if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Choose the desired Python version
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt
      - uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements.txt
          ipython kernel install --name "python3" --user

      - name: Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Discover Notebooks
        run: |
          notebooks=$(find . -name "*.ipynb")
          echo "$notebooks"
        id: discover_notebooks

      - name: Discover Scripts
        run: |
          scripts=$(find . -name "*.py")
          echo "$scripts"
        id: discover_scripts

      # - name: Run Notebooks
      #   run: |
      #     for notebook in ${{ steps.discover_notebooks.outputs.notebooks }}; do
      #       echo "$notebook"
      #       notebook_dir=$(dirname "$notebook")
      #       cd "$notebook_dir"
      #       jupyter nbconvert --to notebook --execute "$(basename "$notebook")"
      #       cd -
      #     done
      
      - name: Run Scripts
        run: |
          for script in ${{ steps.discover_scripts.outputs.scripts }}; do
            echo "$script"
            script_dir=$(dirname "$script")
            cd "$script_dir"
            python "$(basename "$script")"
            cd -
          done
      
      # - name: Get Changed Files
      #   id: changed-files
      #   uses: tj-actions/changed-files@v37

      # - name: Add Changed files
      #   if: steps.changed-files.outputs.any_changed == 'true'
      #   run: |
      #     for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
      #       git add $file
      #       echo "$file"
      #     done

      # - name: Commit Changes
      #   if: steps.changed-files.outputs.any_changed == 'true'
      #   run: |
      #       git commit -m "Update comparison figures"
      #       echo "made commit"

      - name: Check for modified files
        id: git-check
        run: echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT

      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update figures"
          git push

      # - name: Push changes to repository
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}